@use '../lib/variable-defaults' as defaults;
@use '../lib/button';

$modal-close-button-image: url('data:image/svg+xml;charset=utf-8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'%23b8b8b8\' viewBox=\'0 0 16 16\'%3E%3Cpath d=\'M2.697.657l12.728 12.728-2.122 2.121L.575 2.778z\'/%3E%3Cpath d=\'M15.425 2.778L2.697 15.506.575 13.385 13.303.657z\'/%3E%3C/svg%3E');

@mixin close-button-background($opacity: 100%) {
    background-image: $modal-close-button-image;
    background-position: center;
    background-repeat: no-repeat;
    background-size: 75% 75%;
    opacity: $opacity;
}

// BLOCK: MODAL
// --------------------------------------------------------------------
@mixin styles (
    $modal-bg: defaults.$modal-bg,
    $modal-fg: defaults.$modal-fg,
    $modal-content-padding: defaults.$modal-content-padding,
    $modal-small-height: defaults.$modal-small-height,
    $modal-small-width: defaults.$modal-small-width,
    $modal-height: defaults.$modal-height,
    $modal-width: defaults.$modal-width,
) {
    .ghct-modal {
        background-color: $modal-bg;
        color: $modal-fg;
        font-family: 'Open Sans', Helvetica, Arial, sans-serif;

        &--with-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--ghct-modal-backdrop, rgba(0 0 0 / 70%));
            padding: 5vh 5vw;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 999999;

            .ghct-modal__content,
            .ghct-modal__inner {
                background: var(--ghct-modal-bg, #{ $modal-bg });
                box-shadow: 15px 0 25px 5px rgba(0 0 0 / 10%);
                display: flex;
                flex-direction: column;
                height: 100%;
                justify-content: space-between;
                max-width: 100%;
                padding: 2rem;
                width: 100%;

                .ghct-embed-placeholder {
                    position: static;
                }
            }

            .ghct-modal__inner,
            .ghct-modal__content > section {
                overflow-x: auto;
            }

            .ghct-modal__content {
                padding-right: 0;

                & > section {
                    padding-right: 2rem;
                }
            }

            @media screen and (min-width: 786px) {
                padding: 5vh 20vw;

                .ghct-modal__content,
                .ghct-modal__inner {
                    max-height: calc(100% - 10vh);
                }
            }

            .ghct-modal__close {
                /* unstyle button */
                background: transparent;
                background-clip: padding-box;
                border: 0;
                border-radius: 0;
                color: inherit;
                line-height: normal;
                padding: 0;
                text-align: left;
                text-decoration: none;
                text-shadow: none;
                white-space: nowrap;

                /* actual close button styles */
                cursor: pointer;
                display: flex;
                height: 3rem;
                position: absolute;
                right: 3rem;
                top: 3rem;
                width: 3rem;
                @include close-button-background;

                &:hover,
                &:focus,
                &:active {
                    @include close-button-background(80%);
                }
            }
        }

        &__button {
            @include button.button($color: hotpink, $radius: 2px);
        }
    }

    body.modal-active {
        overflow: hidden;
    }

    .ghct-hide {
        display: none;
    }
}
